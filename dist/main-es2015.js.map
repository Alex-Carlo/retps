{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.effects.ts","./src/app/app.module.ts","./src/app/characters/character-details/character-details.component.ts","./src/app/characters/character-details/character-details.component.html","./src/app/characters/characters-list-table/characters-list-table.component.html","./src/app/characters/characters-list-table/characters-list-table.component.ts","./src/app/characters/characters-list/characters-list.component.ts","./src/app/characters/characters-list/characters-list.component.html","./src/app/characters/characters.service.ts","./src/app/loader/loader.service.ts","./src/app/movies/movie-detail/movie-detail.component.ts","./src/app/movies/movie-detail/movie-detail.component.html","./src/app/movies/movie.service.ts","./src/app/movies/movie/movie.component.ts","./src/app/movies/movie/movie.component.html","./src/app/movies/movies-list/movies-list.component.ts","./src/app/movies/movies-list/movies-list.component.html","./src/app/movies/movies.actions.ts","./src/app/movies/movies.effects.ts","./src/app/movies/movies.module.ts","./src/app/movies/movies.reducer.ts","./src/app/reducers/index.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,0C;;;;;;;;;;;;;;;;;;;;;ACXqD;AAC+B;AACa;AACM;AACtB;;;AAEjF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,0FAAmB;KAE/B;IACD;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,6FAAoB;KAChC;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,6FAAoB;KAChC;IAED,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,0GAAuB,EAAC;IACxD,EAAC,IAAI,EAAE,yBAAyB,EAAE,SAAS,EAAE,gHAAyB,EAAC;IACvE;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,SAAS;QACrB,SAAS,EAAC,MAAM;KACjB;CACF,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAHlB,CAAC,iEAAoB,CAAC,MAAM,EAAE,EAAE,sBAAsB,EAAE,QAAQ,EAAE,CAAC,CAAC,EACnE,yDAAY;mIAEX,gBAAgB,oFAFjB,yDAAY;;;;;;;;;;;;;;;;;;;;;;AChCxB,8DAA8D;AAWvD,MAAM,YAAY;IAErB;IAEA,CAAC;IAED,QAAQ;IAGR,CAAC;IAEH,MAAM;IACN,CAAC;;wEAZU,YAAY;0GAAZ,YAAY;QCZzB,iFAA6B;QACzB,uEAAM;QAAA,oEAAS;QAAA,4DAAO;QACxB,4DAAc;QACd,2EAA+B;;;;;;;;;;;;;;;;;;;;;ACE1B,MAAM,UAAU;IAErB,YAAoB,QAAiB;QAAjB,aAAQ,GAAR,QAAQ,CAAS;IAAG,CAAC;;oEAF9B,UAAU;2GAAV,UAAU,WAAV,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLiC;AAGF;AACT;AACgC;AACpB;AACJ;AACA;AACE;AACI;AAGjB;AACI;AAEa;AACL;AACI;AACN;AACT;AACsD;AACiB;AACX;;;;;AAgChG,MAAM,SAAS;;kEAAT,SAAS;sGAAT,SAAS,cAFR,wDAAY;2GAFb,EACV,YAnBQ;YACP,qEAAa;YACb,0FAAuB;YACvB,iEAAgB;YAChB,wEAAgB;YAChB,oEAAc;YAEd,kEAAa;YAEb,sEAAe;YACf,kEAAa;YACb,6DAAmB,CAAC,+CAAQ,EAAE,EAAE,YAAY,uDAAE,CAAC;YAC/C,CAAC,6EAAsB,CAAC,CAAC,CAAC,iFAA8B,EAAE,CAAC,CAAC,CAAC,EAAE;YAC/D,iEAAqB,CAAC,CAAC,oDAAU,CAAC,CAAC;YACnC,+DAAY;YACZ,iFAA8B,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,6EAAsB,EAAE,CAAC;SAChF;mIAMU,SAAS,mBA3BlB,wDAAY;QACZ,0GAAuB;QACvB,2HAA4B;QAC5B,gHAAyB,aAGzB,qEAAa;QACb,0FAAuB;QACvB,iEAAgB;QAChB,wEAAgB;QAChB,oEAAc;QAEd,kEAAa;QAEb,sEAAe;QACf,kEAAa,oMAIb,+DAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CyD;AAG7B;AAGuC;;;;;;;;;;;;IC4B7E,yEACmB;IACjB,0EAAmD;IAA7C,yYAAwB;IAAqB,uDAAc;IAAA,4DAAO;IAC1E,4DAAM;;;IAFD,yEAAa;IACmC,0DAAc;IAAd,8EAAc;;;IAhCzE,2EAA+C;IAC7C,kFAAiB;IACf,iFAAgB;IACd,uDACF;IAAA,4DAAiB;IACjB,oFAAmB;IAAA,uDAAwB;IAAA,4DAAoB;IACjE,4DAAkB;IAClB,mFAAkB;IAEhB,mFAA0C;IACxC,mFAA2C;IACzC,0EAA8B;IAAC,wDAA+B;IAAA,4DAAO;IAEvE,4DAAgB;IAChB,oFAA2C;IACzC,2EAA8B;IAAC,wDAAwB;IAAA,4DAAO;IAEhE,4DAAgB;IAChB,oFAA2C;IACzC,2EAA8B;IAAC,wDAAoB;IAAA,4DAAO;IAE5D,4DAAgB;IAChB,oFAA2C;IACzC,2EAA8B;IAAC,wDAAgC;IAAA,4DAAO;IAExE,4DAAgB;IAElB,4DAAgB;IAChB,yEAAoB;IAAA,kEAAM;IAAA,4DAAK;IAC/B,0EAA6B;IAC3B,kIAGM;;IAGR,4DAAM;IACR,4DAAmB;IACrB,4DAAW;;;;IAnCL,0DACF;IADE,wFACF;IACmB,0DAAwB;IAAxB,gGAAwB;IAK1B,0DAAa;IAAb,sEAAa;IACK,0DAA+B;IAA/B,yGAA+B;IAGjD,0DAAa;IAAb,sEAAa;IACK,0DAAwB;IAAxB,kGAAwB;IAG1C,0DAAa;IAAb,sEAAa;IACK,0DAAoB;IAApB,8FAAoB;IAGtC,0DAAa;IAAb,sEAAa;IACK,0DAAgC;IAAhC,0GAAgC;IAO3C,0DAAmB;IAAnB,qJAAmB;;;ADpBxC,MAAM,yBAAyB;IAIpC,YAAmB,YAA0B,EAAS,MAAc,EAAQ,iBAAoC,EAAU,KAAmB;QAA1H,iBAAY,GAAZ,YAAY,CAAc;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAQ,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,UAAK,GAAL,KAAK,CAAc;QAH7I,WAAM,GAAwB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mDAAM,CAAC,yDAAkB,CAAC,CAAC,CAAC;QAC1E,eAAU,GAA0B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mDAAM,CAAC,mDAAY,CAAC,CAAC,CAAC;IAG1E,CAAC;IAED,QAAQ;QACN,6DAA6D;QAC7D,4CAA4C;QAC5C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kEAAc,EAAE,CAAC,CAAC;QAE1C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,wEAAoB,EAAE,CAAC,CAAC;QAChD,8DAA8D;IAEhE,CAAC;IACD,QAAQ,CAAC,KAAY;QACnB,4CAA4C;QAC5C,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QACvC,sCAAsC;QAGtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAE9C,CAAC;;kGAxBU,yBAAyB;uHAAzB,yBAAyB;QCdtC,uEAA4D;QAC1D,2EAAU;QAAA,qEAAU;QAAA,4DAAW;QAC/B,gFACF;QAAA,4DAAI;QACJ,iIAsCW;;;QA1CG,6IAA0B;QAI7B,0DAA2B;QAA3B,iJAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;ICHlC,yEAAsC;IAAC,gEAAI;IAAA,4DAAK;;;IAChD,yEAAmC;IAAC,uDAAY;IAAA,4DAAK;;;IAAjB,0DAAY;IAAZ,uFAAY;;;IAGhD,yEAAsC;IAAA,qEAAU;IAAA,4DAAK;;;IACrD,yEAAmC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,mFAAkB;;;IAGrD,yEAAsC;IAAA,iEAAM;IAAA,4DAAK;;;IACjD,yEAAmC;IAAA,uDAAc;IAAA,4DAAK;;;IAAnB,0DAAc;IAAd,+EAAc;;;IAGjD,yEAAsC;IAAA,+DAAI;IAAA,4DAAK;;;IAC/C,yEAAmC;IAAA,uDAAY;IAAA,4DAAK;;;IAAjB,0DAAY;IAAZ,6EAAY;;;IAG/C,yEAAsC;IAAA,qEAAU;IAAA,4DAAK;;;IACrD,yEAAmC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,mFAAkB;;;IAGrD,yEAAsC;IAAA,qEAAU;IAAA,4DAAK;;;IACrD,yEAAmC;IAAA,uDAAkB;IAAA,4DAAK;;;IAAvB,0DAAkB;IAAlB,mFAAkB;;;IAGrD,yEAAsC;IAAA,oEAAS;IAAA,4DAAK;;;IACpD,yEAAmC;IAAA,uDAAiB;IAAA,4DAAK;;;IAAtB,0DAAiB;IAAjB,kFAAiB;;;IAEtD,oEAAwD;;;;IACxD,yEAA+F;IAAjC,+YAAgC;IAAC,4DAAK;;ACpB/F,MAAM,4BAA4B;IAKvC,YAAmB,iBAAoC,EAC7C,MAAc;QACtB,+CAA+C;QAF9B,sBAAiB,GAAjB,iBAAiB,CAAmB;QAC7C,WAAM,GAAN,MAAM,CAAQ;QAHxB,iBAAY,GAAG,CAAC,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;IAMjG,CAAC;IAED,WAAW,CAAC,SAAoB;QAC9B,6DAA6D;QAE7D,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,GAAG,SAAS,CAAC;QACrD,yGAAyG;QAEzG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;;wGAlBU,4BAA4B;0HAA5B,4BAA4B;QDVzC,2EAA2C;QACzC,2EAAkC;QAChC,sHAAgD;QAChD,sHAAqD;QACvD,qEAAe;QACf,2EAAwC;QACtC,sHAAqD;QACrD,sHAA0D;QAC5D,qEAAe;QACf,2EAAoC;QAClC,sHAAiD;QACjD,sHAAsD;QACxD,qEAAe;QACf,4EAAkC;QAChC,wHAA+C;QAC/C,wHAAoD;QACtD,qEAAe;QACf,4EAAwC;QACtC,wHAAqD;QACrD,wHAA0D;QAC5D,qEAAe;QACf,4EAAwC;QACtC,wHAAqD;QACrD,wHAA0D;QAC5D,qEAAe;QACf,4EAAuC;QACrC,wHAAoD;QACpD,wHAAyD;QAC3D,qEAAe;QACf,yHAAwD;QACxD,yHAAoG;QACtG,4DAAQ;;QA/BS,sFAAyB;QA6BpB,2DAA6B;QAA7B,6FAA6B;QACV,0DAAqB;QAArB,8FAAqB;;;;;;;;;;;;;;;;;;;;;;;AElBvD,MAAM,uBAAuB;IAKlC,YAAmB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IACvD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC9E,kCAAkC;YAClC,qCAAqC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,KAAgB;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjG,6BAA6B;YAE7B,0BAA0B;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;IACH,CAAC;;8FA3BU,uBAAuB;qHAAvB,uBAAuB;QCZpC,yEAAuB;QACrB,0FAAiF;QAEnF,4DAAM;;QAFuB,0DAAyB;QAAzB,sFAAyB;;;;;;;;;;;;;;;;;;;;;;;ACCZ;AACQ;;;;AAMlD,MAAM,yBAAyB,GAAG,+BAA+B,CAAC,MAAM,CAAC;AAMlE,MAAM,iBAAiB;IAI5B,YAAoB,IAAgB,EAAU,aAA4B;QAAtD,SAAI,GAAJ,IAAI,CAAY;QAAU,kBAAa,GAAb,aAAa,CAAe;IAC1E,CAAC;IAED,iBAAiB,CAAC,UAAU,GAAG,CAAC;QAC9B,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,sCAAsC,UAAU,EAAE,CAAC;aAChF,IAAI,CAAC,mDAAG,CAAC,CAAC,UAAU,CAAC,EAAE;YACtB,6CAA6C;YAE3C,oCAAoC;YACpC,uDAAuD;YACvD,MAAM;YACN,OAAO,UAAU,CAAC;QACpB,CAAC,CACF,CAAC,EAAE,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED,mBAAmB,CAAC,IAAW;QAC7B,sCAAsC;QAEtC,OAAO,8CAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;YACjD,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;YAClC,gCAAgC;YAEhC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,YAAY,CAAC;iBAC1C,IAAI,CAAC,mDAAG,CAAC,SAAS,CAAC,EAAE;gBAEpB,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBAElD,0CAA0C;gBAC1C,OAAO,SAAS,CAAC;YACnB,CAAC,CAAC,EAAE,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAID,YAAY,CAAC,WAAmB;QAC9B,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,gCAAgC,WAAW,EAAE,CAAC;aAC3E,IAAI,CAAC,mDAAG,CAAC,SAAS,CAAC,EAAE;YACpB,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YAClD,OAAO,SAAS,CAAC;QACnB,CAAC,CAAC,EAAE,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC;IAEO,cAAc,CAAC,YAAoB;QACzC,OAAO,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,yBAAyB,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAClG,CAAC;;kFApDU,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;;;;;;;;;;;;;;;;;;ACVb,MAAM,aAAa;IAIxB;QAFA,mBAAc,GAAG,CAAC,CAAC;IAGnB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;;0EAbU,aAAa;8GAAb,aAAa,WAAb,aAAa,mBADD,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ACCc;AAGiB;AAEO;;;;;;;;;;;IC8B/D,sEAA8C;IAC9C,0EAAiE;IAA3D,+YAAmC;IAAwB,uDAAa;IAAA,4DAAO;IACrF,4DAAM;;;IAD2D,0DAAa;IAAb,6EAAa;;;IAlCpF,2EAA0C;IACxC,kFAAiB;IACf,iFAAgB;IACf,uDACD;IAAA,4DAAiB;IACjB,oFAAmB;IAAA,uDAAiB;IAAA,4DAAoB;IAC1D,4DAAkB;IAClB,mFAAkB;IAChB,uEAAoB;IAAA,uDAAsB;IAAA,4DAAI;IAC9C,mFAA0C;IACxC,oFAA2C;IACzC,2EAA8B;IAAC,sEAAS;IAAA,4DAAO;IAC/C,2EAAuB;IAAA,wDAAmB;IAAA,4DAAO;IACnD,4DAAgB;IAChB,oFAA2C;IACzC,2EAA8B;IAAC,2EAAc;IAAA,4DAAO;IACpD,2EAAuB;IAAA,wDAAqB;IAAA,4DAAO;IACrD,4DAAgB;IAChB,oFAA2C;IACzC,2EAA8B;IAAC,uEAAU;IAAA,4DAAO;IAChD,2EAAuB;IAAA,wDAAiB;IAAA,4DAAO;IACjD,4DAAgB;IAChB,oFAA2C;IACzC,2EAA8B;IAAC,uEAAU;IAAA,4DAAO;IAChD,2EAAuB;IAAA,wDAAiB;IAAA,4DAAO;IACjD,4DAAgB;IAChB,oFAA2C;IACzC,2EAA8B;IAAC,8EAAiB;IAAA,4DAAO;IACvD,2EAAuB;IAAA,wDAA0B;IAAA,4DAAO;IAC1D,4DAAgB;IAClB,4DAAgB;IAChB,yEAAmB;IAAA,uEAAW;IAAA,4DAAK;IACnC,0EAA8B;IAC5B,6HAEM;;IAGR,4DAAM;IACR,4DAAmB;IACrB,4DAAW;;;;IArCN,0DACD;IADC,yFACD;IACmB,0DAAiB;IAAjB,iFAAiB;IAGhB,0DAAsB;IAAtB,sFAAsB;IAEzB,0DAAa;IAAb,sEAAa;IAEH,0DAAmB;IAAnB,mFAAmB;IAE7B,0DAAa;IAAb,sEAAa;IAEH,0DAAqB;IAArB,qFAAqB;IAE/B,0DAAa;IAAb,sEAAa;IAEH,0DAAiB;IAAjB,iFAAiB;IAE3B,0DAAa;IAAb,sEAAa;IAEH,0DAAiB;IAAjB,iFAAiB;IAE3B,0DAAa;IAAb,sEAAa;IAEH,0DAA0B;IAA1B,0FAA0B;IAK7B,0DAAsB;IAAtB,0JAAsB;;;ADrB3C,MAAM,oBAAoB;IAG/B,YAAmB,YAA0B,EACnC,KAAmB,EACnB,MAAc;QAFL,iBAAY,GAAZ,YAAY,CAAc;QACnC,UAAK,GAAL,KAAK,CAAc;QACnB,WAAM,GAAN,MAAM,CAAQ;QAJxB,UAAK,GAAoB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mDAAM,CAAC,+CAAQ,CAAC,CAAC,CAAC;QAC3D,gBAAW,GAA4B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mDAAM,CAAC,yDAAkB,CAAC,CAAC,CAAC;IAGvD,CAAC;IAE7B,QAAQ;QAKN,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,uDAAU,EAAE,CAAC,CAAC;QAEtC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iEAAoB,EAAE,CAAC,CAAC;QAChD,6DAA6D;QAC9D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAClC,uCAAuC;QAExC,CAAC,CAAC,CAAC;IACJ,CAAC;IACD,mBAAmB,CAAC,SAAoB;QACtC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,iBAAiB,GAAG,SAAS,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACvD,CAAC;;wFAzBU,oBAAoB;kHAApB,oBAAoB;QChBjC,uEAA4D;QAC1D,2EAAU;QAAA,qEAAU;QAAA,4DAAW;QAC/B,gFACF;QAAA,4DAAI;QACJ,4HAwCW;;;QA5CG,6IAA0B;QAI7B,0DAAsB;QAAtB,4IAAsB;;;;;;;;;;;;;;;;;;;;;;;;;ACHe;AAGI;;;;AAKpD,MAAM,oBAAoB,GAAG,+BAA+B,CAAC,MAAM,CAAC;AAG7D,MAAM,YAAY;IAOvB,YAAoB,IAAgB,EAAS,aAA4B;QAArD,SAAI,GAAJ,IAAI,CAAY;QAAS,kBAAa,GAAb,aAAa,CAAe;QANxD,YAAO,GAAG,uBAAuB,CAAC;IAMyB,CAAC;IAE7E,SAAS;QACP,MAAM,OAAO,GAAG;YACd,MAAM,EAAE,EAAE;SACX,CAAC;QACF,wCAAwC;QAExC,cAAc;QACd,+BAA+B;QAC/B,KAAK;QAEL,uDAAuD;QACvD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,OAAO,wCAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC3B;aAAM;YACL,qCAAqC;YACrC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,GAAG,IAAI,CAAC,OAAO,QAAQ,EAAC,OAAO,CAAC;iBAClE,IAAI,CAAC,mDAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBACvC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnC,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,CACH,CAAC,EACF,mDAAG,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,EACpC,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;SACzD;IACH,CAAC;IAED,+DAA+D;IAC/D,0CAA0C;IAC1C,sBAAsB;IACtB,gBAAgB;IAChB,uBAAuB;IACvB,QAAQ;IACR,OAAO;IAEP,yDAAyD;IACzD,IAAI;IAEJ,mBAAmB,CAAC,SAAoB;QAEtC,OAAO,8CAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;YAC1C,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;YAClC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,OAAO,CAAC;iBACjC,IAAI,CAAC,mDAAG,CAAC,IAAI,CAAC,EAAE;gBACf,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAEnC,OAAO,IAAI,CAAC;YACd,CAAC,CAAC,EAAE,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;QAC5D,CAAC,CACF,CAAC,CAAC;IACL,CAAC;IAED,OAAO,CAAC,OAAe;QACrB,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;QAClC,0CAA0C;QAE1C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,GAAG,IAAI,CAAC,OAAO,UAAU,OAAO,EAAE,CAAC;aAC5D,IAAI,CAAC,mDAAG,CAAC,IAAI,CAAC,EAAE;YAEf,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EAAE,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC;IAEO,SAAS,CAAC,OAAe;QAC/B,OAAO,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,oBAAoB,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACnF,CAAC;;wEA1EU,YAAY;6GAAZ,YAAY,WAAZ,YAAY;;;;;;;;;;;;;;;;;;;;;;;;ACDlB,MAAM,cAAc;IAEzB,YAAmB,YAA0B,EACnC,MAAc;QADL,iBAAY,GAAZ,YAAY,CAAc;QACnC,WAAM,GAAN,MAAM,CAAQ;IAAE,CAAC;IAE3B,iBAAiB,CAAC,KAAW;QAC3B,2CAA2C;QAC3C,IAAI,CAAC,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QACzC,qCAAqC;QAGnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9C,CAAC;;4EAZU,cAAc;4GAAd,cAAc;QCX3B,8EAAmE;QAAzD,wIAAS,gCAAwB,IAAC;QAC1C,kFAAiB;QACb,iFAAgB;QAAA,yEAAQ;QAAA,uDAA0F;QAAA,4DAAS;QAAA,4DAAiB;QAEhJ,4DAAkB;QAClB,8EAoBmB;QACrB,4DAAW;;QAxBmB,0DAA0F;QAA1F,gLAA0F;;;;;;;;;;;;;;;;;;;;;;;;ACE5E;AAG4B;AAO1C;;;;;;;ICd9B,4EACyC;;;IAA9B,2EAAe;;;IAE1B,yEAAmD;IACjD,4EAK6B;IAC/B,4DAAM;;IAFF,0DAAe;IAAf,wEAAe;;ADeZ,MAAM,mBAAmB;IAM9B,YAAoB,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;QALvC,YAAO,GAAwB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mDAAM,CAAC,sDAAS,CAAC,CAAC,CAAC;IAKxB,CAAC;IAE3C,QAAQ;QACN,6CAA6C;QAE7C,qDAAqD;QACrD,mDAAmD;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yDAAY,CAAC,CAAC;QAElD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,wDAAW,EAAE,CAAC,CAAC;IACzC,CAAC;IAID,UAAU,CAAC,KAAa,EAAE,IAAW;QACnC,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;;sFAtBU,mBAAmB;iHAAnB,mBAAmB;QCvBhC,+HACyC;;QAEzC,+GAOM;;;QAVgD,iJAAoB;QAGjD,0DAAwB;QAAxB,iJAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6B1C,MAAM,WAAW;IAAxB;QACW,SAAI,6CAAiC;IAChD,CAAC;CAAA;AAEM,MAAM,kBAAkB;IAG7B,YAAmB,OAAgB;QAAhB,YAAO,GAAP,OAAO,CAAS;QAF1B,SAAI,2DAAwC;IAEd,CAAC;CACzC;AAEM,MAAM,gBAAgB;IAG3B,YAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,uDAAsC;IAEF,CAAC;CACnD;AACM,MAAM,UAAU;IAErB;QACE,uDAAuD;QAFhD,SAAI,2CAAgC;IAI7C,CAAC;CACF;AAEM,MAAM,qBAAqB;IAGhC,YAAmB,OAAY;QAC7B,oCAAoC;QADnB,YAAO,GAAP,OAAO,CAAK;QAFtB,SAAI,oEAA2C;IAKxD,CAAC;CACF;AAEM,MAAM,mBAAmB;IAG9B,YAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,gEAAyC;IAEL,CAAC;CACnD;AAEM,MAAM,cAAc;IAEzB;QACE,2DAA2D;QAFpD,SAAI,uDAAoC;IAIjD,CAAC;CACF;AACM,MAAM,2BAA2B;IAGtC,YAAmB,OAAY;QAC7B,6EAA6E;QAD5D,YAAO,GAAP,OAAO,CAAK;QAFtB,SAAI,iFAAiD;IAK9D,CAAC;CACF;AAEM,MAAM,yBAAyB;IAGpC,YAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,6EAA+C;IAEX,CAAC;CACnD;AAEM,MAAM,oBAAoB;IAE/B;QACE,2DAA2D;QAFpD,SAAI,oEAA0C;IAIvD,CAAC;CACF;AACM,MAAM,iBAAiB;IAG5B,YAAmB,OAAY;QAC7B,oCAAoC;QADnB,YAAO,GAAP,OAAO,CAAK;QAFtB,SAAI,wDAAuC;IAKpD,CAAC;CACF;AAEM,MAAM,eAAe;IAG1B,YAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,oDAAqC;IAED,CAAC;CACnD;AAEM,MAAM,oBAAoB;IAAjC;QACW,SAAI,+DAA0C;IACzD,CAAC;CAAA;AAEM,MAAM,2BAA2B;IAItC,YAAmB,OAAY;QAAZ,YAAO,GAAP,OAAO,CAAK;QAHtB,SAAI,6EAAiD;QAI5D,8CAA8C;IAChD,CAAC;CACF;AAEM,MAAM,yBAAyB;IAGpC,YAAmB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAFpC,SAAI,yEAA+C;IAEX,CAAC;CACnD;AAIM,MAAM,UAAU;IAGrB,YAAmB,OAAmB;QAAnB,YAAO,GAAP,OAAO,CAAY;QAF7B,SAAI,2CAAgC;IAEH,CAAC;CAC5C;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3I6D;AAmBpC;AACY;AACsC;;;;;;AAKrE,MAAM,aAAa;IA0HxB,YAAoB,QAAiB,EAC3B,KAAmB,EACnB,OAAqB,EACrB,iBAAoC;QAH1B,aAAQ,GAAR,QAAQ,CAAS;QAC3B,UAAK,GAAL,KAAK,CAAc;QACnB,YAAO,GAAP,OAAO,CAAc;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QA3H9C,WAAM,GAAG,2DAAY,CAAC,GAAG,EAAE;YACzB,OAAO,IAAI,CAAC,QAAQ;iBACjB,IAAI,CACH,qDAAM,2CAA+B,EACrC,8DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAC1B,yDAAS,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,CAC5B,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,IAAI,CAC3B,mDAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,+DAAkB,CAAC,IAAI,CAAC,CAAC,EACzC,0DAAU,CAAC,GAAG,CAAC,EAAE,CAAC,wCAAE,CAAC,IAAI,6DAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CACjD,CACF,CACF;QACL,CAAC,CAAC,CAAC;QACH,qBAAgB,GAAG,2DAAY,CAAC,GAAG,EAAE;YACnC,OAAO,IAAI,CAAC,QAAQ;iBACjB,IAAI,CACH,qDAAM,6DAAwC,EAC9C,8DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAC1B,yDAAS,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,CAE5B,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,CACxE,0DAAU,CAAC,GAAG,CAAC,EAAE,CAAC,wCAAE,CAAC,IAAI,sEAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,EACzD,mDAAG,CAAC,IAAI,CAAC,EAAE,CAET,IAAI,wEAA2B,CAAC,IAAI,CAAC;YACrC,6CAA6C;YAC7C,0CAA0C;YAC1C,uDAAuD;YACvD,gHAAgH;YAGhH,kEAAkE;YAClE,eAAe;YACf,IAAI;aACL,CACF,CACF,CAAC;QACR,CAAC,CAAC,CAAC;QAEH,0BAAqB,GAAI,2DAAY,CAAC,GAAG,EAAE;YACzC,OAAO,IAAI,CAAC,QAAQ;iBACjB,IAAI,CACH,qDAAM,kEAAwC,EAC9C,8DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAC1B,yDAAS,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,CAE5B,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,IAAI,CACnE,0DAAU,CAAC,GAAG,CAAC,EAAE,CAAC,wCAAE,CAAC,IAAI,sEAAyB,CAAC,GAAG,CAAC,CAAC,CAAC,EACzD,mDAAG,CAAC,IAAI,CAAC,EAAE,CAET,IAAI,wEAA2B,CAAC,IAAI,CAAC;YACrC,6CAA6C;YAC7C,0CAA0C;YAC1C,uDAAuD;YACvD,gHAAgH;YAGhH,kEAAkE;YAClE,eAAe;YACf,IAAI;aACL,CACF,CACF,CAAC;QACR,CAAC,CAAC,CAAC;QAEH,gBAAW,GAAG,2DAAY,CAAC,GAAG,EAAE;YAC9B,OAAO,IAAI,CAAC,QAAQ;iBACjB,IAAI,CACH,qDAAM,yCAA8B,EACpC,8DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAC1B,yDAAS,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,CAC5B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,IAAI,CACrD,0DAAU,CAAC,GAAG,CAAC,EAAE,CAAC,wCAAE,CAAC,IAAI,4DAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAC/C,mDAAG,CAAC,IAAI,CAAC,EAAE,CAET,IAAI,8DAAiB,CAAC,IAAI,CAAC;YAC3B,6CAA6C;YAC7C,0CAA0C;YAC1C,uDAAuD;YACvD,gHAAgH;YAGhH,kEAAkE;YAClE,eAAe;YACf,IAAI;aACL,CACF,CACF,CAAC;QACR,CAAC,CAAC,CAAC;QACH,iCAAiC;QACjC,gBAAgB;QAChB,4CAA4C;QAC5C,OAAO;QACP,8DAA8D;QAC9D,IAAI;QACJ,MAAM;QACN,KAAK;QACL,oBAAe,GAAG,2DAAY,CAAC,GAAG,EAAE;YAClC,OAAO,IAAI,CAAC,QAAQ;iBACjB,IAAI,CACH,qDAAM,qDAAkC,EACxC,8DAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAC1B,yDAAS,CAAC,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,EAAE,CAC5B,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,IAAI,CACzE,0DAAU,CAAC,GAAG,CAAC,EAAE,CAAC,wCAAE,CAAC,IAAI,gEAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,EACnD,mDAAG,CAAC,IAAI,CAAC,EAAE,CAET,IAAI,kEAAqB,CAAC,IAAI,CAAC,CAChC,CACF,CACF,CAAC;QACR,CAAC,CAAC,CAAC;QACH,cAAS,GAAG,2DAAY,CAAC,GAAG,EAAE;YAC5B,OAAO,IAAI,CAAC,QAAQ;iBACjB,IAAI,CACH,qDAAM,yCAA8B,EACpC,mDAAG,CAAC,GAAG,EAAE,CAAC,IAAI,wDAAW,EAAE,CAAC,CAC7B;QACL,CAAC,CAAC,CAAC;IAK+C,CAAC;;0EA7HxC,aAAa;8GAAb,aAAa,WAAb,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BqB;AACS;AACX;AACU;AACI;AACJ;AACuB;AAEJ;AACjB;AACV;AACD;AACG;AAC4B;AAC9B;;;AA2BxC,MAAM,YAAY;;wEAAZ,YAAY;yGAAZ,YAAY;8GAPZ;QACT,wDAAY;KACb,YAnBQ;YACP,yDAAY;YACZ,kEAAgB;YAChB,uDAAW;YACX,iEAAa;YAEb,sEAAe;YACf,kEAAa;YACb,yFAAwB;YACxB,0DAAY;YACZ,oEAAwB,CAAC,CAAC,0DAAa,CAAC,CAAC;SAC1C;mIAaU,YAAY,mBAXrB,mFAAmB;QACnB,kEAAc;QACd,sFAAoB,aAdpB,yDAAY;QACZ,kEAAgB;QAChB,uDAAW;QACX,iEAAa;QAEb,sEAAe;QACf,kEAAa;QACb,yFAAwB;QACxB,0DAAY,+EAYZ,mFAAmB;;;;;;;;;;;;;;;;;ACnBhB,MAAM,YAAY,GAAU;IACjC,SAAS,EAAE,KAAK;IAChB,KAAK,EAAE,IAAI;IACX,IAAI,EAAE,EAAE;IACR,uBAAuB,EAAC,EAAE;IAC1B,aAAa,EAAE,IAAI;IAEnB,iBAAiB,EAAE,IAAI;IACvB,uBAAuB,EAAC,EAAE;IAG1B,cAAc;IACd,kBAAkB;CAEnB,CAAC;AAEK,SAAS,OAAO,CAAC,KAAK,GAAG,YAAY,EAAE,MAAqB;IACjE,QAAQ,MAAM,CAAC,IAAI,EAAE;QAEnB;YACE,uCACK,KAAK,KACR,SAAS,EAAE,IAAI,EACf,KAAK,EAAE,IAAI,IACX;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,KAAK,EAChB,IAAI,EAAE,MAAM,CAAC,OAAO,IAGpB;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,MAAM,CAAC,OAAO,IACrB;QACF;YACE,uCACK,KAAK,KACR,SAAS,EAAE,IAAI,EACf,KAAK,EAAE,IAAI,IACX;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,KAAK,EAChB,aAAa,EAAE,MAAM,CAAC,OAAO,IAG7B;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,MAAM,CAAC,OAAO,IACrB;QAEN;YACE,uCACK,KAAK,KACR,SAAS,EAAE,IAAI,EACf,KAAK,EAAE,IAAI,IACX;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,KAAK,EAChB,iBAAiB,EAAE,MAAM,CAAC,OAAO,IAGjC;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,MAAM,CAAC,OAAO,IACrB;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,IAAI,EACf,KAAK,EAAE,IAAI,IACX;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,KAAK,EAChB,uBAAuB,EAAE,MAAM,CAAC,OAAO,IAGvC;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,MAAM,CAAC,OAAO,IACrB;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,IAAI,EACf,KAAK,EAAE,IAAI,IACX;QAEJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,KAAK,EAChB,uBAAuB,EAAE,MAAM,CAAC,OAAO,IAGvC;QAGJ;YACE,uCACK,KAAK,KACR,SAAS,EAAE,KAAK,EAChB,KAAK,EAAE,MAAM,CAAC,OAAO,IACrB;QAEJ,qCAAqC;QACrC,aAAa;QACb,gBAAgB;QAChB,6EAA6E;QAC7E,OAAO;QAEP;YACE,OAAO,KAAK,CAAC;KAChB;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9JoB;AACwC;AACN;AAMhD,MAAM,QAAQ,GAA4B;IAC/C,MAAM,EAAE,2DAAkB;CAC3B,CAAC;AAGK,MAAM,YAAY,GAAyB,CAAC,6EAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AAE7E,MAAM,cAAc,GAAG,kEAAqB,CAAmB,QAAQ,CAAC,CAAC;AACzE,MAAM,SAAS,GAAG,2DAAc,CAAC,cAAc,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACtE,MAAM,YAAY,GAAG,2DAAc,CAAC,cAAc,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAC9E,MAAM,kBAAkB,GAAG,2DAAc,CAAC,cAAc,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAClG,MAAM,QAAQ,GAAG,2DAAc,CAAC,cAAc,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AAC9E,MAAM,kBAAkB,GAAG,2DAAc,CAAC,cAAc,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAClG,MAAM,YAAY,GAAG,2DAAc,CAAC,cAAc,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;AAE7F,qFAAqF;AACrF,0FAA0F;AAC1F,qFAAqF;;;;;;;;;;;;;;;;AC5B9E,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;;;ACJ6C;AAGF;AACY;AAIzD,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport { MovieDetailComponent } from './movies/movie-detail/movie-detail.component';\nimport { CharactersListComponent } from './characters/characters-list/characters-list.component';\nimport { CharacterDetailsComponent } from './characters/character-details/character-details.component';\nimport { MoviesListComponent } from './movies/movies-list/movies-list.component';\n\nconst routes: Routes = [\n  {\n    path: 'movies',\n    component: MoviesListComponent\n\n  },\n  {\n    path: 'movies/:movieId',\n    component: MovieDetailComponent,\n  },\n  {\n    path: 'mov',\n    component: MovieDetailComponent,\n  },\n  \n  {path: 'characters', component: CharactersListComponent},\n  {path: 'characters/:characterId', component: CharacterDetailsComponent},\n  {\n    path: '**',\n    redirectTo: '/movies',\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\n// import { LoadingService } from './loading/loading.service';\n\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n \n})\nexport class AppComponent implements  OnInit {\n\n    constructor() {\n\n    }\n\n    ngOnInit() {\n\n\n    }\n \n  logout() {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <span>Star wars</span>\n  </mat-toolbar>\n  <router-outlet></router-outlet>\n\n\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect } from '@ngrx/effects';\n\n\n@Injectable()\nexport class AppEffects {\n\n  constructor(private actions$: Actions) {}\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { MoviesModule } from './movies/movies.module';\nimport { environment } from '../environments/environment';\nimport { metaReducers, reducers } from './reducers';\nimport { AppEffects } from './app.effects';\nimport { CharactersListComponent } from './characters/characters-list/characters-list.component';\nimport { CharactersListTableComponent } from './characters/characters-list-table/characters-list-table.component';\nimport { CharacterDetailsComponent } from './characters/character-details/character-details.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CharactersListComponent,\n    CharactersListTableComponent,\n    CharacterDetailsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatToolbarModule,\n    MatTableModule,\n    \n    MatCardModule,\n    \n    MatButtonModule,\n    MatIconModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    !environment.production ? StoreDevtoolsModule.instrument() : [],\n    EffectsModule.forRoot([AppEffects]),\n    MoviesModule,\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production })\n  ],\n \n  providers: [\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport { getCharacter, getCharacterMovies, State } from '../../reducers';\nimport { CharactersService} from '../characters.service';\nimport { Character } from '../models/character';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { Movie } from '../../movies/models/movie';\nimport { FetchCharacter, FetchCharacterMovies } from '../../movies/movies.actions';\nimport { Router } from '@angular/router';\nimport { MovieService } from '../../movies/movie.service';\n@Component({\n  selector: 'app-character-details',\n  templateUrl: './character-details.component.html',\n  styleUrls: ['./character-details.component.scss']\n})\nexport class CharacterDetailsComponent implements OnInit {\n  films$: Observable<Movie[]> = this.store.pipe(select(getCharacterMovies));\n  character$: Observable<Character> = this.store.pipe(select(getCharacter));\n\n  constructor(public movieService: MovieService,private router: Router,public charactersService: CharactersService, private store: Store<State>,) {\n  }\n\n  ngOnInit() {\n    // this.character = this.charactersService.selectedCharacter;\n    // console.log(\"CharacterDetailsComponent\");\n    this.store.dispatch(new FetchCharacter());\n\n    this.store.dispatch(new FetchCharacterMovies());\n    // console.log(\"---------this.film:-----------\", this.films$);\n\n  }\n  openfilm(movie: Movie) {\n    // console.log(\"openMoviesDetails:\", movie);\n    this.movieService.selectedFilm = movie;\n    // console.log(\"movie.id:\", movie.id);\n\n\n    this.router.navigate(['/movies', movie.id]);\n  \n  }\n\n}\n","\n<a mat-button [routerLink]=\"['/movies']\" class=\"backButton\">\n  <mat-icon>arrow_back</mat-icon>\n  Back To Films List\n</a>\n<mat-card *ngIf=\"(character$ | async) as chac\">\n  <mat-card-header>\n    <mat-card-title>\n      {{chac.name }}\n    </mat-card-title>\n    <mat-card-subtitle>Gender :{{ chac.gender}}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <!-- <p class=\"mat-body\">{{film.opening_crawl}}</p> -->\n    <mat-grid-list cols=\"5\" rowHeight=\"100px\">\n      <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n        <span class=\"mat-body-strong\"> hair color: {{chac.hair_color}}</span>\n        <!-- <span class=\"mat-body\">{{film.episode_id}}</span> -->\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n        <span class=\"mat-body-strong\"> height: {{chac.height}} </span>\n        <!-- <span class=\"mat-body\">{{film.release_date}}</span> -->\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n        <span class=\"mat-body-strong\"> mass: {{chac.mass}} </span>\n        <!-- <span class=\"mat-body\">{{film.director}}</span> -->\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n        <span class=\"mat-body-strong\"> skin color: {{chac.skin_color}} </span>\n        <!-- <span class=\"mat-body\">{{film.producer}}</span> -->\n      </mat-grid-tile>\n     \n    </mat-grid-list>\n    <h3 class=\"mat-h3\" >Films:</h3>\n    <div class=\"table-container\">\n      <div *ngFor=\"let item of films$ | async; trackBy: trackByUrl\"\n           [item]=\"item\">\n        <span (click)=\"openfilm(item)\"  class=\"filmsHover\">{{item.title}}</span>\n      </div>\n      <!-- <div *ngIf=\"(characters$ | async) as ch\"></div> -->\n      <!-- <app-characters-list-table [characters]=\"(characters$ | async)\"></app-characters-list-table> -->\n    </div>\n  </mat-card-content>\n</mat-card>","<table mat-table [dataSource]=\"characters\">\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name</th>\n    <td mat-cell *matCellDef=\"let row\"> {{row.name}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"birth_year\">\n    <th mat-header-cell *matHeaderCellDef>Birth Year</th>\n    <td mat-cell *matCellDef=\"let row\">{{row.birth_year}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"height\">\n    <th mat-header-cell *matHeaderCellDef>Height</th>\n    <td mat-cell *matCellDef=\"let row\">{{row.height}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"mass\">\n    <th mat-header-cell *matHeaderCellDef>Mass</th>\n    <td mat-cell *matCellDef=\"let row\">{{row.mass}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"hair_color\">\n    <th mat-header-cell *matHeaderCellDef>Hair Color</th>\n    <td mat-cell *matCellDef=\"let row\">{{row.hair_color}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"skin_color\">\n    <th mat-header-cell *matHeaderCellDef>Skin Color</th>\n    <td mat-cell *matCellDef=\"let row\">{{row.skin_color}}</td>\n  </ng-container>\n  <ng-container matColumnDef=\"eye_color\">\n    <th mat-header-cell *matHeaderCellDef>Eye Color</th>\n    <td mat-cell *matCellDef=\"let row\">{{row.eye_color}}</td>\n  </ng-container>\n  <tr mat-header-row *matHeaderRowDef=\"tableColumns\"></tr>\n  <tr mat-row *matRowDef=\"let myRowData; columns: tableColumns\" (click)=\"showDetails(myRowData)\"></tr>\n</table>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport { CharactersService} from '../characters.service';\nimport { Character } from '../models/character';\n\n@Component({\n  selector: 'app-characters-list-table',\n  templateUrl: './characters-list-table.component.html',\n  styleUrls: ['./characters-list-table.component.scss']\n})\nexport class CharactersListTableComponent {\n\n  @Input() characters: Character[];\n  tableColumns = ['name', 'birth_year', 'height', 'mass', 'hair_color', 'skin_color', 'eye_color'];\n\n  constructor(public charactersService: CharactersService,\n    private router: Router) {\n    // console.log(\"CharactersListTableComponent\");\n    \n  }\n\n  showDetails(character: Character) {\n    // console.log(\"-00000---character----00000---:\", character);\n    \n    this.charactersService.selectedCharacter = character;\n    // console.log(\" this.charactersService.selectedCharacter :\", this.charactersService.selectedCharacter );\n    \n    this.router.navigate(['/characters', character.id]);\n  }\n\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport { CharactersService} from '../characters.service';\n// import {PageEvent} from '@angular/material';\nimport {Subscription} from 'rxjs';\nimport { Character } from '../models/character';\nimport { PageEvent } from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-characters-list',\n  templateUrl: './characters-list.component.html',\n  styleUrls: ['./characters-list.component.scss']\n})\nexport class CharactersListComponent implements OnInit, OnDestroy {\n  characters: Character[];\n  charactersCount: number;\n  subscription: Subscription;\n\n  constructor(public charactersService: CharactersService) {\n  }\n\n  ngOnInit() {\n    this.subscription = this.charactersService.getCharactersList().subscribe(data => {\n      // this.characters = data.results;\n      // this.charactersCount = data.count;\n    });\n  }\n\n  pageData(event: PageEvent) {\n    this.subscription = this.charactersService.getCharactersList(event.pageIndex + 1).subscribe(data => {\n      // console.log(\"data:\",data);\n      \n      // this.characters = data;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n}\n","<div class=\"container\">\n  <app-characters-list-table [characters]=\"characters\"></app-characters-list-table>\n \n</div>\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {forkJoin, Observable} from 'rxjs';\nimport {finalize, map, tap} from 'rxjs/operators';\n\nimport {LoaderService} from '../loader/loader.service';\nimport { Movie, MoviesResponse } from '../movies/models/movie';\nimport { Character } from './models/character';\n\nconst CHARACTER_HTTP_URL_LENGTH = `https://swapi.dev/api/people/`.length;\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CharactersService {\n\n  selectedCharacter: Character;\n\n  constructor(private http: HttpClient, private loaderService: LoaderService) {\n  }\n\n  getCharactersList(pageNumber = 1): Observable<Character> {\n    this.loaderService.startLoading();\n    return this.http.get<Character>(`https://swapi.dev/api/people/?page=${pageNumber}`)\n      .pipe(map((characters => {\n        // console.log(\"--characters--:\",characters);\n        \n          // characters.forEach(character => {\n          //   character.id = this.getCharacterId(character.url);\n          // });\n          return characters;\n        }\n      )), finalize(() => this.loaderService.finishLoading()));\n  }\n\n  getCharactersByFilm(film: Movie) {\n    // console.log(\"getCharactersByFilm\");\n    \n    return forkJoin(film.characters.map(characterUrl => {\n      this.loaderService.startLoading();\n      // console.log(\"loaderService\");\n      \n      return this.http.get<Character>(characterUrl)\n        .pipe(map(character => {\n          \n          character.id = this.getCharacterId(character.url);\n          \n          // console.log(\"get character\",character);\n          return character;\n        }), finalize(() => this.loaderService.finishLoading()))\n    }));\n  }\n\n  \n\n  getCharacter(characterId: number): Observable<Character> {\n    this.loaderService.startLoading();\n    return this.http.get<Character>(`https://swapi.dev/api/people/${characterId}`)\n      .pipe(map(character => {\n        character.id = this.getCharacterId(character.url);\n        return character;\n      }), finalize(() => this.loaderService.finishLoading()));\n  }\n\n  private getCharacterId(characterUrl: string): number {\n    return parseInt(characterUrl.substring(CHARACTER_HTTP_URL_LENGTH, characterUrl.length - 1), 10);\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class LoaderService {\n\n  loadingCounter = 0;\n\n  constructor() {\n  }\n\n  startLoading() {\n    this.loadingCounter++;\n  }\n\n  finishLoading() {\n    this.loadingCounter--;\n  }\n\n}\n","import { Component, NgModule, OnInit } from '@angular/core';\nimport { Movie } from '../models/movie';\nimport { MovieService } from '../movie.service';\nimport {  select, Store } from '@ngrx/store';\nimport { State } from '../movies.reducer';\nimport { Observable } from 'rxjs';\nimport { getMovie, getMovieCharacters } from '../../reducers';\nimport { map } from 'rxjs/operators';\nimport { FetchMovie, FetchMovieCharacters } from '../movies.actions';\nimport { Character } from '../../characters/models/character';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.scss']\n})\nexport class MovieDetailComponent implements OnInit {\n  film$: Observable<Movie>=this.store.pipe(select(getMovie));\n  characters$: Observable<Character[]> = this.store.pipe(select(getMovieCharacters));\n  constructor(public movieService: MovieService,\n    private store: Store<State>,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    \n  \n    \n\n    this.store.dispatch(new FetchMovie());\n    \n    this.store.dispatch(new FetchMovieCharacters());\n    // console.log(\"---------this.film:-----------\", this.film$);\n   this.characters$.forEach(element => {\n    //  console.log(\"characters:\",element);\n     \n   });\n  }\n  openCharacterDetail(character: Character) {\n    console.log(\"character:\", character);\n    this.movieService.selectedCharacter = character;\n    this.router.navigate(['/characters/', character.id]);\n  }\n\n}\n","\n<a mat-button [routerLink]=\"['/movies']\" class=\"backButton\">\n  <mat-icon>arrow_back</mat-icon>\n  Back To Films List\n</a>\n<mat-card *ngIf=\"(film$ | async) as film\">\n  <mat-card-header>\n    <mat-card-title>\n     {{film.title }}\n    </mat-card-title>\n    <mat-card-subtitle>{{film.director}}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p class=\"mat-body\">{{film.opening_crawl}}</p>\n    <mat-grid-list cols=\"5\" rowHeight=\"100px\">\n      <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n        <span class=\"mat-body-strong\"> Episode: </span>\n        <span class=\"mat-body\">{{film.episode_id}}</span>\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n        <span class=\"mat-body-strong\"> Release Date: </span>\n        <span class=\"mat-body\">{{film.release_date}}</span>\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n        <span class=\"mat-body-strong\"> Director: </span>\n        <span class=\"mat-body\">{{film.director}}</span>\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n        <span class=\"mat-body-strong\"> Producer: </span>\n        <span class=\"mat-body\">{{film.producer}}</span>\n      </mat-grid-tile>\n      <mat-grid-tile [colspan]=\"1\" [rowspan]=\"1\">\n        <span class=\"mat-body-strong\"> # of Characters: </span>\n        <span class=\"mat-body\">{{film.characters.length}}</span>\n      </mat-grid-tile>\n    </mat-grid-list>\n    <h3 class=\"mat-h3\">Characters:</h3>\n    <div class=\"table-container\" >\n      <div *ngFor=\"let item of characters$ | async\">\n      <span (click)=\"openCharacterDetail(item)\" class=\"characterHover\">{{item.name}}</span> \n      </div>\n      <!-- <div *ngIf=\"(characters$ | async) as ch\"></div> -->\n      <!-- <app-characters-list-table [characters]=\"(characters$ | async)\"></app-characters-list-table> -->\n    </div>\n  </mat-card-content>\n</mat-card>\n<!-- <swapi-movie *ngFor=\"let movie of film$ | async\"\n           [movie]=\"movie\"></swapi-movie> -->\n\n  ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable, of } from 'rxjs';\n\nimport { Movie, MoviesResponse } from './models/movie';\nimport { finalize, map, tap } from 'rxjs/operators';\nimport { LoaderService } from '../loader/loader.service';\nimport { Character } from '../characters/models/character';\n\n\nconst FILM_HTTP_URL_LENGTH = `'https://swapi.dev/api/films/`.length;\n\n@Injectable()\nexport class MovieService {\n  private readonly baseUrl = 'https://swapi.dev/api';\n\n  filmsList: Movie[];\n  selectedFilm: Movie;\n  selectedCharacter: Character;\n\n  constructor(private http: HttpClient,private loaderService: LoaderService) {}\n\n  getMovies(): Observable<Movie[]>{\n    const options = {\n      params: {}\n    };\n    // const link = `${this.baseUrl}films/`;\n\n    // if (page) {\n    //   options.params = { page };\n    // };\n\n    // return this.http.get<MoviesResponse>(link, options);\n    if (this.filmsList) {\n      return of(this.filmsList);\n    } else {\n      // this.loaderService.startLoading();\n      return this.http.get<MoviesResponse>(`${this.baseUrl}/films`,options)\n        .pipe(map((films => films.results.map(film => {\n              film.id = this.getFilmId(film.url);\n              return film;\n            })\n          )),\n          tap(films => this.filmsList = films),\n          finalize(() => this.loaderService.finishLoading()));\n    }\n  }\n \n  // searchForMovie(lookup: string): Observable<MoviesResponse> {\n  //   const link = `${this.baseUrl}films/`;\n  //   const options = {\n  //     params: {\n  //       search: lookup\n  //     }\n  //   };\n\n  //   return this.http.get<MoviesResponse>(link, options);\n  // }\n  \n  getFilmsByCharacter(character: Character) {\n    \n    return forkJoin(character.films.map(filmUrl => {\n        this.loaderService.startLoading();\n        return this.http.get<Movie>(filmUrl)\n          .pipe(map(film => {\n            film.id = this.getFilmId(film.url);\n            \n            return film;\n          }), finalize(() => this.loaderService.finishLoading()));\n      }\n    ));\n  }\n\n  getFilm(movieId: number): Observable<Movie> {\n    this.loaderService.startLoading();\n    // console.log(\"getFilm filmId:\",movieId);\n    \n    return this.http.get<Movie>(`${this.baseUrl}/films/${movieId}`)\n      .pipe(map(film => {\n        \n        film.id = this.getFilmId(film.url);\n        return film;\n      }), finalize(() => this.loaderService.finishLoading()));\n  }\n\n  private getFilmId(filmUrl: string): number {\n    return parseInt(filmUrl.substring(FILM_HTTP_URL_LENGTH, filmUrl.length - 2), 10);\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Movie } from '../models/movie';\nimport { MovieService } from '../movie.service';\n\n@Component({\n  selector: 'swapi-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MovieComponent {\n  @Input() movie: Movie;\n  constructor(public MovieService: MovieService,\n    private router: Router){}\n\n  openMoviesDetails(movie:Movie){\n    // console.log(\"openMoviesDetails:\",movie);\n    this.MovieService.selectedFilm = movie;\n  // console.log(\"movie.id:\",movie.id);\n  \n    \n    this.router.navigate(['/movies', movie.id]);\n  }\n}\n","\n<mat-card (click)=\"openMoviesDetails(movie)\" style=\"margin: 10px;\">\n  <mat-card-header>\n      <mat-card-title><strong>Movie: \"{{ movie.title }}---Episodio: {{movie.episode_id}}-- Director: {{movie.director}}\"</strong></mat-card-title>\n\n  </mat-card-header>\n  <mat-card-content>\n    <!-- <p>\n      Director: <strong>{{ hero.director }}</strong>\n    </p>\n    <p>\n      Producer: <strong>{{hero.producer}}</strong>\n    </p> -->\n    <!-- <p>\n      Gender: <strong>{{ hero.gender }}</strong>\n    </p>\n\n    <p>\n      Hair:  <strong>{{ hero.hair_color }}</strong>\n    </p>\n    <p>\n      Height: <strong>{{ hero.height }}cm</strong>\n    </p>\n    <p>\n      Weight: <strong>{{ hero.mass }}kg</strong>\n    </p> -->\n  </mat-card-content>\n</mat-card>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { State } from '../movies.reducer';\nimport { FetchMovies, ChangePage, Pagination } from '../movies.actions';\nimport {\n  getMovies,\n  getIsLoading,\n\n  // getIsFirstPage,\n  // getIsLastPage\n} from '../../reducers/index';\nimport { Movie } from '../models/movie';\n\n@Component({\n  selector: 'swapi-movies-list',\n  templateUrl: './movies-list.component.html',\n  styleUrls: ['./movies-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MoviesListComponent implements OnInit {\n  movies$: Observable<Movie[]> = this.store.pipe(select(getMovies));\n  isFirst$: Observable<boolean>;\n  isLast$: Observable<boolean>;\n  isLoading$: Observable<boolean>;\n\n  constructor(private store: Store<State>) {}\n\n  ngOnInit() {\n    // console.log(\"---movies---:\",this.movies$);\n    \n    // this.isFirst$ = this.store.select(getIsFirstPage);\n    // this.isLast$ = this.store.select(getIsLastPage);\n    this.isLoading$ = this.store.select(getIsLoading);\n\n    this.store.dispatch(new FetchMovies());\n  }\n\n\n\n  trackByUrl(index: number, hero: Movie): string {\n    return hero.title;\n  }\n}\n","\n<swapi-movie class=\"flex-container\" *ngFor=\"let movie of movies$ | async; trackBy: trackByUrl\"\n           [movie]=\"movie\"></swapi-movie>\n\n<div class=\"loader__bg\" *ngIf=\"isLoading$ | async\">\n  <mat-spinner\n    class=\"loader\"\n    color=\"accent\"\n    mode=\"indeterminate\"\n    [diameter]=\"40\"\n    [value]=\"25\"></mat-spinner>\n</div>\n\n","import { Action } from '@ngrx/store';\nimport { Movie, MoviesResponse } from './models/movie';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nexport const enum MoviesActionTypes {\n\n  FetchMovies = '[Movies] Fetch Movies',\n  FetchMoviesSuccess = '[Movies] Load Movies Success',\n  FetchMoviesError = '[Movies] Load Movies Error',\n\n  ChangePage = '[Movies] Change page',\n  FetchMovieCharacters = '[Movie] Fetch Movie Characters',\n  FetchMovieCharactersSuccess = `[Movie] Load Movie Characters Success`,\n  FetchMovieCharactersError = '[Movie] Load Movie Characters Error',\n  FetchMovie = '[Movie] Fetch Movie ',\n  FetchMovieSuccess = `[Movie] Load Movie Success`,\n  FetchMovieError = '[Movie] Load Movie Error',\n\n  FetchCharacter = '[Character] Fetch Character ',\n  FetchCharacterSuccess = `[Character] Load Character Success`,\n  FetchCharacterError = '[Character] Load Character Error',\n\n  FetchCharacterMovies = '[Character] Fetch Character Movies ',\n  FetchCharacterMoviesSuccess = `[Character] Load Character Movies Success`,\n  FetchCharacterMoviesError = '[Character] Load Character Movies Error',\n\n}\n\nexport const enum Pagination {\n  NEXT,\n  PREV\n}\n\nexport class FetchMovies implements Action {\n  readonly type = MoviesActionTypes.FetchMovies;\n}\n\nexport class FetchMoviesSuccess implements Action {\n  readonly type = MoviesActionTypes.FetchMoviesSuccess;\n\n  constructor(public payload: Movie[]) { }\n}\n\nexport class FetchMoviesError implements Action {\n  readonly type = MoviesActionTypes.FetchMoviesError;\n\n  constructor(public payload: HttpErrorResponse) { }\n}\nexport class FetchMovie implements Action {\n  readonly type = MoviesActionTypes.FetchMovie;\n  constructor() {\n    // console.log(\"*************FetchMovie*************\");\n\n  }\n}\n\nexport class FetchCharacterSuccess implements Action {\n  readonly type = MoviesActionTypes.FetchCharacterSuccess;\n\n  constructor(public payload: any) {\n    // console.log(\"FetchMovieSuccess\");\n\n  }\n}\n\nexport class FetchCharacterError implements Action {\n  readonly type = MoviesActionTypes.FetchCharacterError;\n\n  constructor(public payload: HttpErrorResponse) { }\n}\n\nexport class FetchCharacter implements Action {\n  readonly type = MoviesActionTypes.FetchCharacter;\n  constructor() {\n    // console.log(\"*************FetchCharacter*************\");\n\n  }\n}\nexport class FetchCharacterMoviesSuccess implements Action {\n  readonly type = MoviesActionTypes.FetchCharacterMoviesSuccess;\n\n  constructor(public payload: any) {\n    // console.log(\"```````````````FetchCharacterMoviesSuccess````````````````\");\n\n  }\n}\n\nexport class FetchCharacterMoviesError implements Action {\n  readonly type = MoviesActionTypes.FetchCharacterMoviesError;\n\n  constructor(public payload: HttpErrorResponse) { }\n}\n\nexport class FetchCharacterMovies implements Action {\n  readonly type = MoviesActionTypes.FetchCharacterMovies;\n  constructor() {\n    // console.log(\"*************FetchCharacter*************\");\n\n  }\n}\nexport class FetchMovieSuccess implements Action {\n  readonly type = MoviesActionTypes.FetchMovieSuccess;\n\n  constructor(public payload: any) {\n    // console.log(\"FetchMovieSuccess\");\n\n  }\n}\n\nexport class FetchMovieError implements Action {\n  readonly type = MoviesActionTypes.FetchMovieError;\n\n  constructor(public payload: HttpErrorResponse) { }\n}\n\nexport class FetchMovieCharacters implements Action {\n  readonly type = MoviesActionTypes.FetchMovieCharacters;\n}\n\nexport class FetchMovieCharactersSuccess implements Action {\n  readonly type = MoviesActionTypes.FetchMovieCharactersSuccess;\n\n\n  constructor(public payload: any) {\n    // console.log(\"FetchMovieCharactersSuccess\");\n  }\n}\n\nexport class FetchMovieCharactersError implements Action {\n  readonly type = MoviesActionTypes.FetchMovieCharactersError;\n\n  constructor(public payload: HttpErrorResponse) { }\n}\n\n\n\nexport class ChangePage implements Action {\n  readonly type = MoviesActionTypes.ChangePage;\n\n  constructor(public payload: Pagination) { }\n}\n\nexport type MoviesActions = FetchMovieCharacters\n  | FetchMovieCharactersSuccess\n  | FetchMovieCharactersError\n  | FetchMovies\n  | FetchMoviesSuccess\n  | FetchMoviesError\n  | FetchMovie\n  | FetchMovieSuccess\n  | FetchMovieError\n  | FetchCharacter\n  | FetchCharacterSuccess\n  | FetchCharacterError\n  | FetchCharacterMovies\n  | FetchCharacterMoviesSuccess\n  | FetchCharacterMoviesError\n  | ChangePage;\n","import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\n// import { getCurrentPage } from '../reducers/index';\nimport { State } from './movies.reducer';\nimport { MovieService } from './movie.service';\nimport {\n  MoviesActionTypes,\n  MoviesActions,\n  FetchMovies,\n  FetchMoviesSuccess,\n  FetchMoviesError,\n  FetchMovieCharactersSuccess,\n  FetchMovieCharactersError,\n  FetchMovieError,\n  FetchMovieSuccess,\n  FetchCharacterError,\n  FetchCharacterSuccess,\n  FetchCharacterMoviesSuccess,\n  FetchCharacterMoviesError\n} from './movies.actions';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap, catchError, withLatestFrom } from 'rxjs/operators';\nimport { CharactersService } from '../characters/characters.service';\nimport { Movie } from './models/movie';\n\n@Injectable()\nexport class MoviesEffects {\n\n  fetch$ = createEffect(() => {\n    return this.actions$\n      .pipe(\n        ofType(MoviesActionTypes.FetchMovies),\n        withLatestFrom(this.store),\n        switchMap(([action, state]) =>\n          this.service.getMovies().pipe(\n            map(data => new FetchMoviesSuccess(data)),\n            catchError(err => of(new FetchMoviesError(err)))\n          )\n        )\n      )\n  });\n  fetchCharacters$ = createEffect(() => {\n    return this.actions$\n      .pipe(\n        ofType(MoviesActionTypes.FetchMovieCharacters),\n        withLatestFrom(this.store),\n        switchMap(([action, state]) =>\n\n          this.charactersService.getCharactersByFilm(this.service.selectedFilm).pipe(\n            catchError(err => of(new FetchMovieCharactersError(err))),\n            map(data =>\n\n              new FetchMovieCharactersSuccess(data)\n              // (characters: Movie['charactersData']) => {\n              // console.log(\"characters:\", characters);\n              // // this.movieService.selectedFilm.charactersData=[];\n              // console.log(\"this.movieService.selectedFilm.charactersData:\", this.movieService.selectedFilm.charactersData);\n\n\n              // //  this.movieService.selectedFilm.charactersData = characters;\n              // return true;\n              // }\n            )\n          )\n        ))\n  });\n\n  fetchCharacterMovies$ =  createEffect(() => {\n    return this.actions$\n      .pipe(\n        ofType(MoviesActionTypes.FetchCharacterMovies),\n        withLatestFrom(this.store),\n        switchMap(([action, state]) =>\n\n          this.service.getFilmsByCharacter(this.service.selectedCharacter).pipe(\n            catchError(err => of(new FetchCharacterMoviesError(err))),\n            map(data =>\n\n              new FetchCharacterMoviesSuccess(data)\n              // (characters: Movie['charactersData']) => {\n              // console.log(\"characters:\", characters);\n              // // this.movieService.selectedFilm.charactersData=[];\n              // console.log(\"this.movieService.selectedFilm.charactersData:\", this.movieService.selectedFilm.charactersData);\n\n\n              // //  this.movieService.selectedFilm.charactersData = characters;\n              // return true;\n              // }\n            )\n          )\n        ))\n  });\n\n  fetchMovie$ = createEffect(() => {\n    return this.actions$\n      .pipe(\n        ofType(MoviesActionTypes.FetchMovie),\n        withLatestFrom(this.store),\n        switchMap(([action, state]) =>\n          this.service.getFilm(this.service.selectedFilm.id).pipe(\n            catchError(err => of(new FetchMovieError(err))),\n            map(data =>\n\n              new FetchMovieSuccess(data)\n              // (characters: Movie['charactersData']) => {\n              // console.log(\"characters:\", characters);\n              // // this.movieService.selectedFilm.charactersData=[];\n              // console.log(\"this.movieService.selectedFilm.charactersData:\", this.movieService.selectedFilm.charactersData);\n\n\n              // //  this.movieService.selectedFilm.charactersData = characters;\n              // return true;\n              // }\n            )\n          )\n        ))\n  });\n  // this.service.getMovies().pipe(\n  //   map(data =>\n  //     new FetchMovieCharactersSuccess(data)\n  //   ),\n  //   catchError(err => of(new FetchMovieCharactersError(err)))\n  // )\n  //   )\n  // );\n  fetchCharacter$ = createEffect(() => {\n    return this.actions$\n      .pipe(\n        ofType(MoviesActionTypes.FetchCharacter),\n        withLatestFrom(this.store),\n        switchMap(([action, state]) =>\n          this.charactersService.getCharacter(this.service.selectedCharacter.id).pipe(\n            catchError(err => of(new FetchCharacterError(err))),\n            map(data =>\n\n              new FetchCharacterSuccess(data)\n            )\n          )\n        ))\n  });\n  paginate$ = createEffect(() => {\n    return this.actions$\n      .pipe(\n        ofType(MoviesActionTypes.ChangePage),\n        map(() => new FetchMovies())\n      )\n  });\n\n  constructor(private actions$: Actions,\n    private store: Store<State>,\n    private service: MovieService,\n    private charactersService: CharactersService) { }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { MoviesListComponent } from './movies-list/movies-list.component';\nimport { MovieComponent } from './movie/movie.component';\nimport { MovieService } from './movie.service';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MoviesEffects } from './movies.effects';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    MatCardModule,\n    \n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    RouterModule,\n    EffectsModule.forFeature([MoviesEffects])\n  ],\n  declarations: [\n    MoviesListComponent,\n    MovieComponent,\n    MovieDetailComponent,\n  ],\n  providers: [\n    MovieService\n  ],\n  exports: [\n    MoviesListComponent\n  ]\n})\nexport class MoviesModule {}\n","import { Action } from '@ngrx/store';\nimport { MoviesActions, MoviesActionTypes, Pagination } from './movies.actions';\nimport { Movie } from './models/movie';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Character } from '../characters/models/character';\n\nexport interface State {\n  isLoading: boolean;\n  error: HttpErrorResponse | null;\n  data: Movie[] | null;\n  selectedMovieCharacters: [] | null;\n  selectedMovie:Movie| null;\n  selectedCharacterMovies: [] | null;\n  selectedCharacter: Character | null;\n\n  // next: string | null;\n  // previous: string | null;\n  \n}\n\nexport const initialState: State = {\n  isLoading: false,\n  error: null,\n  data: [],\n  selectedMovieCharacters:[],\n  selectedMovie: null,\n\n  selectedCharacter: null,\n  selectedCharacterMovies:[]\n  \n  \n  // next: null,\n  // previous: null,\n\n};\n\nexport function reducer(state = initialState, action: MoviesActions): State {\n  switch (action.type) {\n\n    case MoviesActionTypes.FetchMovies:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n\n    case MoviesActionTypes.FetchMoviesSuccess:\n      return {\n        ...state,\n        isLoading: false,\n        data: action.payload,\n        // next: action.payload.next,\n        // previous: action.payload.previous\n      };\n\n    case MoviesActionTypes.FetchMoviesError:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n      case MoviesActionTypes.FetchMovie:\n        return {\n          ...state,\n          isLoading: true,\n          error: null\n        };\n  \n      case MoviesActionTypes.FetchMovieSuccess:\n        return {\n          ...state,\n          isLoading: false,\n          selectedMovie: action.payload,\n          // next: action.payload.next,\n          // previous: action.payload.previous\n        };\n  \n      case MoviesActionTypes.FetchMovieError:\n        return {\n          ...state,\n          isLoading: false,\n          error: action.payload\n        };\n    \n    case MoviesActionTypes.FetchCharacter:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n\n    case MoviesActionTypes.FetchCharacterSuccess:\n      return {\n        ...state,\n        isLoading: false,\n        selectedCharacter: action.payload,\n        // next: action.payload.next,\n        // previous: action.payload.previous\n      };\n\n    case MoviesActionTypes.FetchCharacterError:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    \n    case MoviesActionTypes.FetchCharacterMovies:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n\n    case MoviesActionTypes.FetchCharacterMoviesSuccess:\n      return {\n        ...state,\n        isLoading: false,\n        selectedCharacterMovies: action.payload,\n        // next: action.payload.next,\n        // previous: action.payload.previous\n      };\n\n    case MoviesActionTypes.FetchCharacterMoviesError:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n    \n    case MoviesActionTypes.FetchMovieCharacters:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n\n    case MoviesActionTypes.FetchMovieCharactersSuccess:\n      return {\n        ...state,\n        isLoading: false,\n        selectedMovieCharacters: action.payload,\n        // next: action.payload.next,\n        // previous: action.payload.previous\n      };\n\n\n    case MoviesActionTypes.FetchMovieCharactersError:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      };\n\n    // case MoviesActionTypes.ChangePage:\n    //   return {\n    //     ...state,\n    //     page: action.payload === Pagination.NEXT ? ++state.page : --state.page\n    //   };\n\n    default:\n      return state;\n  }\n}\n","import {\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '../../environments/environment';\nimport * as fromMovies from '../movies/movies.reducer';\n\nexport interface State {\n  movies: fromMovies.State;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  movies: fromMovies.reducer,\n};\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n\nexport const getMoviesState = createFeatureSelector<fromMovies.State>('movies');\nexport const getMovies = createSelector(getMoviesState, state => state.data);\nexport const getIsLoading = createSelector(getMoviesState, state => state.isLoading);\nexport const getMovieCharacters = createSelector(getMoviesState, state => state.selectedMovieCharacters);\nexport const getMovie = createSelector(getMoviesState, state => state.selectedMovie);\nexport const getCharacterMovies = createSelector(getMoviesState, state => state.selectedCharacterMovies);\nexport const getCharacter = createSelector(getMoviesState, state => state.selectedCharacter);\n\n// export const getCurrentPage = createSelector(getMoviesState, state => state.page);\n// export const getIsFirstPage = createSelector(getMoviesState, state => !state.previous);\n// export const getIsLastPage = createSelector(getMoviesState, state => !state.next);\n","\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}